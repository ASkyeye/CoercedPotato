[
	uuid(df1941c5-fe89-4e79-bf10-463657acf44d),
		version(1.0),
]
interface efsrpc_through_pipe_efsrpc
{
	typedef pipe unsigned char EFS_EXIM_PIPE;
	typedef unsigned long DWORD, * PDWORD, * LPDWORD;
	typedef int BOOL;

	typedef struct _EFS_HASH_BLOB {
		[range(0, 100)] DWORD cbData;
		[size_is(cbData)] unsigned char* bData;
	} EFS_HASH_BLOB;

	typedef struct _RPC_SID_IDENTIFIER_AUTHORITY {
		byte Value[6];
	} RPC_SID_IDENTIFIER_AUTHORITY;

	typedef struct _RPC_SID {
		unsigned char Revision;
		unsigned char SubAuthorityCount;
		RPC_SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
		[size_is(SubAuthorityCount)] unsigned long SubAuthority[];
	} RPC_SID,* PRPC_SID, * PSID;

	typedef struct _CERTIFICATE_BLOB {
		DWORD dwCertEncodingType;
		[range(0, 32768)] DWORD cbData;
		[size_is(cbData)] unsigned char* bData;
	} EFS_CERTIFICATE_BLOB;

	typedef struct _ENCRYPTION_CERTIFICATE {
		DWORD cbTotalLength;
		RPC_SID* UserSid;
		EFS_CERTIFICATE_BLOB* CertBlob;
	} ENCRYPTION_CERTIFICATE;

	typedef struct _ENCRYPTION_CERTIFICATE_LIST {
		[range(0, 500)] DWORD nUsers;
		[size_is(nUsers, )] ENCRYPTION_CERTIFICATE** Users;
	} ENCRYPTION_CERTIFICATE_LIST;

	typedef struct _ENCRYPTION_CERTIFICATE_HASH {
		DWORD cbTotalLength;
		RPC_SID* UserSid;
		EFS_HASH_BLOB* Hash;
		[string] wchar_t* lpDisplayInformation;
	} ENCRYPTION_CERTIFICATE_HASH;

	typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST {
		[range(0, 500)] DWORD nCert_Hash;
		[size_is(nCert_Hash, )] ENCRYPTION_CERTIFICATE_HASH** Users;
	} ENCRYPTION_CERTIFICATE_HASH_LIST;

	typedef [context_handle] void* PEXIMPORT_CONTEXT_HANDLE;

	typedef struct _EFS_RPC_BLOB {
		[range(0, 266240)] DWORD cbData;
		[size_is(cbData)] unsigned char* bData;
	} EFS_RPC_BLOB, * PEFS_RPC_BLOB;

	typedef struct _ENCRYPTED_FILE_METADATA_SIGNATURE {
		DWORD dwEfsAccessType;
		ENCRYPTION_CERTIFICATE_HASH_LIST* CertificatesAdded;
		ENCRYPTION_CERTIFICATE* EncryptionCertificate;
		EFS_RPC_BLOB* EfsStreamSignature;
	} ENCRYPTED_FILE_METADATA_SIGNATURE;

	typedef struct _ENCRYPTION_PROTECTOR {
		DWORD cbTotalLength;
		RPC_SID* UserSid;
		[string] wchar_t* lpProtectorDescriptor;
	} ENCRYPTION_PROTECTOR, * PENCRYPTION_PROTECTOR;

	typedef struct _ENCRYPTION_PROTECTOR_LIST {
		DWORD nProtectors;
		[size_is(nProtectors)] PENCRYPTION_PROTECTOR* pProtectors;
	} ENCRYPTION_PROTECTOR_LIST, * PENCRYPTION_PROTECTOR_LIST;


	typedef struct Struct_68_t
	{
		char 	StructMember0[6];
	}Struct_68_t;

	typedef struct Struct_100_t
	{
		char 	StructMember0;
		char 	StructMember1;
		struct Struct_68_t 	StructMember2;
		[size_is(StructMember1)]/*[range(0,0)]*/ long StructMember3[];
	}Struct_100_t;

	typedef struct Struct_136_t
	{
		long 	StructMember0;
		[unique] [size_is(StructMember0)]/*[range(0,100)]*/ char* StructMember1;
	}Struct_136_t;

	typedef struct Struct_152_t
	{
		long 	StructMember0;
		[unique] struct Struct_100_t* StructMember1;
		[unique] struct Struct_136_t* StructMember2;
		[unique] [string] wchar_t* StructMember3;
	}Struct_152_t;

	typedef struct Struct_220_t
	{
		long 	StructMember0;
		[unique] /* [DBG] FC_BOGUS_ARRAY */ [size_is(StructMember0)]/*[range(0,500)]*/  /*  */ struct Struct_152_t** StructMember1;
	}Struct_220_t;

	typedef struct Struct_266_t
	{
		long 	StructMember0;
		long 	StructMember1;
		[unique] [size_is(StructMember1)]/*[range(0,32768)]*/ char* StructMember2;
	}Struct_266_t;

	typedef struct Struct_282_t
	{
		long 	StructMember0;
		[unique] struct Struct_100_t* StructMember1;
		[unique] struct Struct_266_t* StructMember2;
	}Struct_282_t;

	typedef struct Struct_346_t
	{
		long 	StructMember0;
		[unique] /* [DBG] FC_BOGUS_ARRAY */ [size_is(StructMember0)]/*[range(0,500)]*/  /*  */ struct Struct_282_t** StructMember1;
	}Struct_346_t;

	typedef struct Struct_392_t
	{
		long 	StructMember0;
		[unique] [size_is(StructMember0)]/*[range(0,266240)]*/ char* StructMember1;
	}Struct_392_t;

	typedef struct Struct_462_t
	{
		[range(0, 8)] long 	StructMember0;
		[range(0, 2048)] long 	StructMember1;
		[unique] [size_is(/* FC_EXPR */(StructMember1 + StructMember0))]/*[range(0,0)]*/ char* StructMember2;
	}Struct_462_t;

	typedef struct Struct_492_t
	{
		long 	StructMember0;
		[unique] struct Struct_220_t* StructMember1;
		[unique] struct Struct_282_t* StructMember2;
		[unique] struct Struct_392_t* StructMember3;
	}Struct_492_t;

	typedef struct Struct_530_t
	{
		long 	StructMember0;
		[unique] struct Struct_100_t* StructMember1;
		[unique] [string] wchar_t* StructMember2;
	}Struct_530_t;

	typedef struct Struct_594_t
	{
		long 	StructMember0;
		[unique] /* [DBG] FC_BOGUS_ARRAY */ [size_is(StructMember0)]/*[range(0,0)]*/  /*  */ struct Struct_530_t** StructMember1;
	}Struct_594_t;

	typedef struct Struct_762_t
	{
		char 	StructMember0[16];
	}Struct_762_t;

	typedef struct Struct_836_t
	{
		long 	StructMember0;
		long 	StructMember1;
	}Struct_836_t;

	typedef struct Struct_850_t
	{
		long 	StructMember0;
		short 	StructMember1;
		short 	StructMember2;
		byte 	StructMember3[8];
	}Struct_850_t;

	typedef struct Struct_904_t
	{
		long 	StructMember0;
		[unique] /* [DBG] FC_BOGUS_ARRAY */ [size_is(StructMember0)]/*[range(0,0)]*/  /*  */ struct Struct_850_t* StructMember1;
		hyper 	StructMember2;
		[unique] [string] wchar_t* StructMember3;
		struct Struct_836_t 	StructMember4;
	}Struct_904_t;

	typedef struct Struct_972_t
	{
		long 	StructMember0;
		[unique] /* [DBG] FC_BOGUS_ARRAY */ [size_is(StructMember0)]/*[range(0,0)]*/  /*  */ struct Struct_904_t** StructMember1;
	}Struct_972_t;

	long EfsRpcOpenFileRaw(
		[in] handle_t binding_h,
		[out] PEXIMPORT_CONTEXT_HANDLE* hContext,
		[in, string] wchar_t* FileName,
		[in] long Flags
	);

	long EfsRpcReadFileRaw(
		[in] PEXIMPORT_CONTEXT_HANDLE hContext,
		[out] EFS_EXIM_PIPE* EfsOutPipe
	);

	long EfsRpcWriteFileRaw(
		[in] PEXIMPORT_CONTEXT_HANDLE hContext,
		[in] EFS_EXIM_PIPE* EfsInPipe
	);

	void EfsRpcCloseRaw(
		[in, out] PEXIMPORT_CONTEXT_HANDLE* hContext
	);

	long EfsRpcEncryptFileSrv(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName
	);

	long EfsRpcDecryptFileSrv(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[in] unsigned long OpenFlag
	);

	DWORD EfsRpcQueryUsersOnFile(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[out] ENCRYPTION_CERTIFICATE_HASH_LIST** Users
	);

	DWORD EfsRpcQueryRecoveryAgents(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[out] ENCRYPTION_CERTIFICATE_HASH_LIST** RecoveryAgents
	);

	DWORD EfsRpcRemoveUsersFromFile(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[in] ENCRYPTION_CERTIFICATE_HASH_LIST* Users
	);

	DWORD EfsRpcAddUsersToFile(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[in] ENCRYPTION_CERTIFICATE_LIST* EncryptionCertificates
	);

	long Proc10_EfsRpcSetFileEncryptionKey(
		[in][unique]struct Struct_282_t* arg_1,
		[in]long arg_2,
		[in]long arg_3);

	DWORD EfsRpcNotSupported(
		[in] handle_t binding_h,
		[in, string] wchar_t* Reserved1,
		[in, string] wchar_t* Reserved2,
		[in] DWORD dwReserved1,
		[in] DWORD dwReserved2,
		[in, unique] EFS_RPC_BLOB* Reserved,
		[in] BOOL bReserved
	);


	DWORD EfsRpcFileKeyInfo(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[in] DWORD InfoClass,
		[out] EFS_RPC_BLOB** KeyInfo
	);

	DWORD EfsRpcDuplicateEncryptionInfoFile(
		[in] handle_t binding_h,
		[in, string] wchar_t* SrcFileName,
		[in, string] wchar_t* DestFileName,
		[in] DWORD dwCreationDisposition,
		[in] DWORD dwAttributes,
		[in, unique] EFS_RPC_BLOB* RelativeSD,
		[in] BOOL bInheritHandle
	);

	long Proc14_EfsUsePinForEncryptedFiles(
		[in]struct Struct_136_t* arg_1,
		[in]struct Struct_462_t* arg_2);

	DWORD EfsRpcAddUsersToFileEx(
		[in] handle_t binding_h,
		[in] DWORD dwFlags,
		[in, unique] EFS_RPC_BLOB* Reserved,
		[in, string] wchar_t* FileName,
		[in] ENCRYPTION_CERTIFICATE_LIST* EncryptionCertificates
	);

	DWORD EfsRpcFileKeyInfoEx(
		[in] handle_t binding_h,
		[in] DWORD dwFileKeyInfoFlags,
		[in, unique] EFS_RPC_BLOB* Reserved,
		[in, string] wchar_t* FileName,
		[in] DWORD InfoClass,
		[out] EFS_RPC_BLOB** KeyInfo
	);

	long Proc17_EfsRpcFileKeyInfoEx(
		[out][ref]struct Struct_392_t** arg_1);

	DWORD EfsRpcGetEncryptedFileMetadata(
		[in] handle_t binding_h,
		[in, string, ref] wchar_t* FileName,
		[out, ref] EFS_RPC_BLOB** EfsStreamBlob
	);

	DWORD EfsRpcSetEncryptedFileMetadata(
		[in] handle_t binding_h,
		[in, string, ref] wchar_t* FileName,
		[in, unique] EFS_RPC_BLOB* OldEfsStreamBlob,
		[in, ref] EFS_RPC_BLOB* NewEfsStreamBlob,
		[in, unique] ENCRYPTED_FILE_METADATA_SIGNATURE* NewEfsSignature
	);

	DWORD EfsRpcFlushEfsCache(
		[in] handle_t binding_h
	);

	long EfsRpcEncryptFileExSrv(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[in, string, unique] wchar_t* ProtectorDescriptor,
		[in] unsigned long Flags
	);

	DWORD EfsRpcQueryProtectors(
		[in] handle_t binding_h,
		[in, string] wchar_t* FileName,
		[out] PENCRYPTION_PROTECTOR_LIST** ppProtectorList);

	long Proc23_EfsRpcWriteFileWithHeaderRaw(
		[in][context_handle] void* arg_0,
		[in]pipe char* arg_1,
		[in]struct Struct_392_t* arg_2,
		[in]hyper arg_3,
		[in]long arg_4);

	long Proc24_EdpRpcCredentialCreate(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in][ptr][string] wchar_t* arg_3,
		[out][ref][string] wchar_t** arg_4);

	long Proc25_EdpRpcCredentialQuery(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in][ptr][string] wchar_t* arg_3,
		[out][ref][string] wchar_t** arg_4);

	long Proc26_EdpRpcCredentialExists(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in][ptr][string] wchar_t* arg_3,
		[out]long* arg_4);

	long Proc27_EdpRpcCredentialDelete(
		[in]long arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in][ptr][string] wchar_t* arg_3,
		[in][ptr][string] wchar_t* arg_4,
		[in][ptr][string] wchar_t* arg_5);

	long Proc28_EdpRpcQueryRevokedPolicyOwnerIds(
		[in][ptr][string] wchar_t* arg_1,
		[in]long arg_2,
		[out][ref][string] wchar_t** arg_3);

	long Proc29_EdpRpcQueryDplEnforcedPolicyOwnerIds(
		[in][ptr][string] wchar_t* arg_1,
		[out][ref][string] wchar_t** arg_2);

	long Proc30_EdpRpcGetLockSessionWrappedKey(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][size_is(arg_3)]/*[range(0,0)]*/ char* arg_2,
		[in]long arg_3,
		[out][ref][size_is(, *arg_5)]/*[range(0,0)]*/ char** arg_4,
		[out]long* arg_5,
		[out][ref][size_is(, *arg_7)]/*[range(0,0)]*/ char** arg_6,
		[out]long* arg_7);

	long Proc31_EdpRpcGetLockSessionUnwrappedKey(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][size_is(arg_3)]/*[range(0,0)]*/ char* arg_2,
		[in]long arg_3,
		[in][ptr][size_is(arg_5)]/*[range(0,0)]*/ char* arg_4,
		[in]long arg_5,
		[out][ref][size_is(, *arg_7)]/*[range(0,0)]*/ char** arg_6,
		[out]long* arg_7);

	long Proc32_EdpRpcGetCredServiceState(
		[out]long* arg_1,
		[out]long* arg_2,
		[out]long* arg_3,
		[out]long* arg_4,
		[out]long* arg_5,
		[out]long* arg_6,
		[out]long* arg_7,
		[out]long* arg_8,
		[out]long* arg_9);

	long Proc33_EdpRpcDplUpgradePinInfo(
		[in][ptr][string] wchar_t* arg_1,
		[out]long* arg_2,
		[out]long* arg_3,
		[out]long* arg_4);

	long Proc34_EdpRpcDplUpgradeVerifyUser(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[out]long* arg_3,
		[out]unsigned __int3264* arg_4);

	long Proc35_EdpRpcDplUserCredentialsSet(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in]/* enum_16 */ short arg_3,
		[in]unsigned __int3264 arg_4);

	long Proc36_EdpRpcDplUserUnlockStart(
		[in][ptr][string] wchar_t* arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in]hyper arg_3,
		[out]unsigned __int3264* arg_4);

	long Proc37_EdpRpcDplUserUnlockComplete(
		[in][ptr][string] wchar_t* arg_1,
		[in]long arg_2,
		[in]unsigned __int3264 arg_3);

	long Proc38_EdpRpcQueueFileForEncryption(
		[in][unique]struct Struct_762_t* arg_1,
		[in][unique][string] wchar_t* arg_2,
		[in][unique][string] wchar_t* arg_3,
		[in][string] wchar_t* arg_4);

	long Proc39_EdpRpcServiceFileEncryptionQueue(
		[in]char arg_1);

	long Proc40_EdpRpcCredSvcControl(
		[in]long arg_1,
		[in][ptr][string] wchar_t* arg_2,
		[in][ptr][string] wchar_t* arg_3,
		[in][ptr][size_is(arg_5)]/*[range(0,0)]*/ char* arg_4,
		[in]long arg_5,
		[in][ptr][size_is(arg_7)]/*[range(0,0)]*/ char* arg_6,
		[in]long arg_7,
		[out][ref][size_is(, *arg_9)]/*[range(0,0)]*/ char** arg_8,
		[out]long* arg_9);

	long Proc41_EdpRpcRmsClearKeys(
	);

	long Proc42_EdpRpcRmsContainerizeFile(
		[in][string] wchar_t* arg_1,
		[in][string] wchar_t* arg_2,
		[in][unique][string] wchar_t* arg_3,
		[in][string] wchar_t* arg_4,
		[out][ref][string] wchar_t** arg_5);

	long Proc43_EdpRpcRmsGetContainerIdentity(
		[in][string] wchar_t* arg_1,
		[out][ref][string] wchar_t** arg_2);

	long Proc44_EdpRpcRmsDecontainerizeFile(
		[in][string] wchar_t* arg_1,
		[in][string] wchar_t* arg_2,
		[out][ref][string] wchar_t** arg_3);

	long Proc45_EdpRpcAllowFileAccessForProcess(
		[in][string] wchar_t* arg_1,
		[in]long arg_2,
		[in][unique][string] wchar_t* arg_3);

	long Proc46_EdpRpcGetTfaCache(
		[out][ref]struct Struct_972_t** arg_1);
}